using System;
using System.Collections.Generic;

class Контекст
{
    public int КоличествоСтолбиков
    {
        get; 
        set;
    }

    public int[] Монеты
    {
        get; 
        set;
    }

    public long[] ДинамическоеПрограммирование
    {
        get; 
        set;
    }

    public void ВводДанных()
    {
        КоличествоСтолбиков = Convert.ToInt32(Console.ReadLine());
        Монеты = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);
        ДинамическоеПрограммирование = new long[КоличествоСтолбиков];
        for (int i = 0; i < КоличествоСтолбиков; i++)
        {
            ДинамическоеПрограммирование[i] = long.MinValue;
        }
        ДинамическоеПрограммирование[0] = Монеты[0];
    }

    public void ВыводРезультата()
    {
        if (ДинамическоеПрограммирование[КоличествоСтолбиков - 1] == long.MinValue)
        {
            Console.WriteLine("Impossible");
        }
        else
        {
            Console.WriteLine(ДинамическоеПрограммирование[КоличествоСтолбиков - 1]);
        }
    }
}

class Program
{
    static void Main()
    {
        var контекст = new Контекст();
        контекст.ВводДанных();

        for (var ТекущийСтолбик = 0; ТекущийСтолбик < контекст.КоличествоСтолбиков; ТекущийСтолбик++)
        {
            if (контекст.ДинамическоеПрограммирование[ТекущийСтолбик] == long.MinValue) continue;

            for (var Шаг = 1; Шаг <= 3; Шаг++)
            {
                var СледующийСтолбик = ТекущийСтолбик + Шаг;
                if (СледующийСтолбик < контекст.КоличествоСтолбиков && контекст.Монеты[СледующийСтолбик] != контекст.Монеты[ТекущийСтолбик])
                {
                    контекст.ДинамическоеПрограммирование[СледующийСтолбик] = Math.Max(контекст.ДинамическоеПрограммирование[СледующийСтолбик], контекст.ДинамическоеПрограммирование[ТекущийСтолбик] + контекст.Монеты[СледующийСтолбик]);
                }
            }
        }

        контекст.ВыводРезультата();
    }
}
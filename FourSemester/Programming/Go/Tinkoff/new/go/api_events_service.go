// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * API умного дома
 *
 * Интерфейс управления и мониторинга устройствами умного дома
 *
 * API version: 0.1
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// EventsAPIService is a service that implements the logic for the EventsAPIServicer
// This service should implement the business logic for every endpoint for the EventsAPI API.
// Include any external packages or services that will be required by this service.
type EventsAPIService struct {
}

// NewEventsAPIService creates a default api service
func NewEventsAPIService() EventsAPIServicer {
	return &EventsAPIService{}
}

// EventsOptions - Получение доступных методов
func (s *EventsAPIService) EventsOptions(ctx context.Context) (ImplResponse, error) {
	// TODO - update EventsOptions with the required logic for this service method.
	// Add api_events_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("EventsOptions method not implemented")
}

// RegisterEvent - Регистрация события от датчика
func (s *EventsAPIService) RegisterEvent(ctx context.Context, body SensorEvent) (ImplResponse, error) {
	// TODO - update RegisterEvent with the required logic for this service method.
	// Add api_events_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	// return Response(201, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(415, {}) or use other options such as http.Ok ...
	// return Response(415, nil),nil

	// TODO: Uncomment the next line to return response Response(422, Error{}) or use other options such as http.Ok ...
	// return Response(422, Error{}), nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("RegisterEvent method not implemented")
}

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * API умного дома
 *
 * Интерфейс управления и мониторинга устройствами умного дома
 *
 * API version: 0.1
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// UsersAPIService is a service that implements the logic for the UsersAPIServicer
// This service should implement the business logic for every endpoint for the UsersAPI API.
// Include any external packages or services that will be required by this service.
type UsersAPIService struct {
}

// NewUsersAPIService creates a default api service
func NewUsersAPIService() UsersAPIServicer {
	return &UsersAPIService{}
}

// BindSensorToUser - Привязка датчика к пользователю
func (s *UsersAPIService) BindSensorToUser(ctx context.Context, userId int64, body SensorToUserBinding) (ImplResponse, error) {
	// TODO - update BindSensorToUser with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, {}) or use other options such as http.Ok ...
	// return Response(201, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(415, {}) or use other options such as http.Ok ...
	// return Response(415, nil),nil

	// TODO: Uncomment the next line to return response Response(422, Error{}) or use other options such as http.Ok ...
	// return Response(422, Error{}), nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("BindSensorToUser method not implemented")
}

// CreateUser - Создание пользователя
func (s *UsersAPIService) CreateUser(ctx context.Context, body UserToCreate) (ImplResponse, error) {
	// TODO - update CreateUser with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	// return Response(200, User{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(415, {}) or use other options such as http.Ok ...
	// return Response(415, nil),nil

	// TODO: Uncomment the next line to return response Response(422, Error{}) or use other options such as http.Ok ...
	// return Response(422, Error{}), nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateUser method not implemented")
}

// GetUserSensors - Получений датчиков пользователя
func (s *UsersAPIService) GetUserSensors(ctx context.Context, userId int64) (ImplResponse, error) {
	// TODO - update GetUserSensors with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Sensor{}) or use other options such as http.Ok ...
	// return Response(200, []Sensor{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(406, {}) or use other options such as http.Ok ...
	// return Response(406, nil),nil

	// TODO: Uncomment the next line to return response Response(422, Error{}) or use other options such as http.Ok ...
	// return Response(422, Error{}), nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUserSensors method not implemented")
}

// HeadUserSensors - Запрос заголовков
func (s *UsersAPIService) HeadUserSensors(ctx context.Context, userId int64) (ImplResponse, error) {
	// TODO - update HeadUserSensors with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(406, {}) or use other options such as http.Ok ...
	// return Response(406, nil),nil

	// TODO: Uncomment the next line to return response Response(422, Error{}) or use other options such as http.Ok ...
	// return Response(422, Error{}), nil

	// TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	// return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("HeadUserSensors method not implemented")
}

// UsersOptions - Получение доступных методов
func (s *UsersAPIService) UsersOptions(ctx context.Context) (ImplResponse, error) {
	// TODO - update UsersOptions with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UsersOptions method not implemented")
}

// UsersSensorsOptions - Получение доступных методов
func (s *UsersAPIService) UsersSensorsOptions(ctx context.Context, userId int64) (ImplResponse, error) {
	// TODO - update UsersSensorsOptions with the required logic for this service method.
	// Add api_users_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("UsersSensorsOptions method not implemented")
}

package main

import (
	"fmt"
	"sync"
)

/*
Написать программу, которая конкурентно рассчитает
значение квадратов чисел взятых из массива (2,4,6,8,10) и
выведет их квадраты в stdout.
*/

func main() {
	var (
		nums       = []int{2, 4, 6, 8}         // Слайс чисел
		squareChan = make(chan int, len(nums)) // Буферизированный канал для результатов
		wg         sync.WaitGroup              // WaitGroup, чтобы знать, когда все подсчеты закончатся
	)

	// Для каждого числа в массиве создаем свою горутину по подсчету квадратов
	for _, num := range nums {
		wg.Add(1)        // Увеличиваем WaitGroup +1 процесс
		go func(a int) { // Просим положить аргумент, иначе num может поменяться
			defer wg.Done()     // По окончании метода WaitGroup -1 процесс
			squareChan <- a * a // Кладем в канал квадрат данного числа
		}(num)
	}

	go func() { // В горутине, чтобы вывод уже начался
		wg.Wait()         // Ждем, когда WaitGroup будет равен 0 процессов
		close(squareChan) // Закрываем канал
	}()

	for num := range squareChan { // Идем циклом, пока канал не будет закрыт
		fmt.Println(num) // Выводим
	}
}

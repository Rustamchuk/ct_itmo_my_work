using System;

class Контекст
{
    public int Длина
    {
        get;
        private set;
    }

    public string СтрокаП
    {
        get;
        private set;
    }

    public string СтрокаК
    {
        get;
        private set;
    }

    public string СтрокаР
    {
        get; 
        private set;
    }

    public void ВводДанных()
    {
        Длина = Convert.ToInt32(Console.ReadLine());
        СтрокаП = Console.ReadLine();
        СтрокаК = Console.ReadLine();
        СтрокаР = Console.ReadLine();
    }

    public void ВыводРезультата(string результат)
    {
        Console.WriteLine(результат.Length);
        Console.WriteLine(результат);
    }
}

class Program
{
    static void Main()
    {
        var контекст = new Контекст();
        контекст.ВводДанных();

        var результат = НайтиМинимальнуюСтроку(контекст.СтрокаП, контекст.СтрокаК, контекст.СтрокаР);
        контекст.ВыводРезультата(результат);
    }

    static string НайтиМинимальнуюСтроку(string строкаП, string строкаК, string строкаР)
    {
        var комбинации = СгенерироватьКомбинации(строкаП, строкаК, строкаР);

        var минимальнаяСтрока = НайтиМинимальнуюКомбинацию(комбинации);

        return минимальнаяСтрока;
    }

    static string[] СгенерироватьКомбинации(string строкаП, string строкаК, string строкаР)
    {
        return new string[]
        {
            ОбъединитьСтроки(ОбъединитьСтроки(строкаП, строкаК), строкаР),
            ОбъединитьСтроки(ОбъединитьСтроки(строкаП, строкаР), строкаК),
            ОбъединитьСтроки(ОбъединитьСтроки(строкаК, строкаП), строкаР),
            ОбъединитьСтроки(ОбъединитьСтроки(строкаК, строкаР), строкаП),
            ОбъединитьСтроки(ОбъединитьСтроки(строкаР, строкаП), строкаК),
            ОбъединитьСтроки(ОбъединитьСтроки(строкаР, строкаК), строкаП)
        };
    }

    static string НайтиМинимальнуюКомбинацию(IReadOnlyList<string> комбинации)
    {
        var минимальнаяСтрока = комбинации[0];
        foreach (var строка in комбинации)
        {
            if (строка.Length < минимальнаяСтрока.Length)
            {
                минимальнаяСтрока = строка;
            }
        }

        return минимальнаяСтрока;
    }

    static string ОбъединитьСтроки(string строкаА, string строкаБ)
    {
        var префиксФункция = ВычислитьПрефиксФункцию(строкаБ);
        int i = 0, j = 0;
        while (i < строкаА.Length)
        {
            if (строкаА[i] == строкаБ[j])
            {
                i++;
                j++;
            }

            if (j == строкаБ.Length)
            {
                return строкаА;
            }

            if (i >= строкаА.Length || строкаА[i] == строкаБ[j]) continue;
            if (j != 0)
            {
                j = префиксФункция[j - 1];
            }
            else
            {
                i++;
            }
        }

        return строкаА + строкаБ.Substring(j);
    }

    static int[] ВычислитьПрефиксФункцию(string шаблон)
    {
        var длина = 0;
        var i = 1;
        var префиксФункция = new int[шаблон.Length];
        префиксФункция[0] = 0;

        while (i < шаблон.Length)
        {
            if (шаблон[i] != шаблон[длина])
            {
                if (длина == 0)
                {
                    префиксФункция[i] = 0;
                    i++;
                }
                else
                {
                    длина = префиксФункция[длина - 1];
                }
            }
            else
            {
                длина++;
                префиксФункция[i] = длина;
                i++;
            }
        }

        return префиксФункция;
    }
}
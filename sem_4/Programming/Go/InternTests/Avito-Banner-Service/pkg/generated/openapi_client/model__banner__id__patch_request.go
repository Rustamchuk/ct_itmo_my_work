/*
Сервис баннеров

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_client

import (
	"encoding/json"
)

// checks if the BannerIdPatchRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BannerIdPatchRequest{}

// BannerIdPatchRequest struct for BannerIdPatchRequest
type BannerIdPatchRequest struct {
	// Идентификаторы тэгов
	TagIds []int32 `json:"tag_ids,omitempty"`
	// Идентификатор фичи
	FeatureId NullableInt32 `json:"feature_id,omitempty"`
	// Содержимое баннера
	Content map[string]interface{} `json:"content,omitempty"`
	// Флаг активности баннера
	IsActive NullableBool `json:"is_active,omitempty"`
}

// NewBannerIdPatchRequest instantiates a new BannerIdPatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBannerIdPatchRequest() *BannerIdPatchRequest {
	this := BannerIdPatchRequest{}
	return &this
}

// NewBannerIdPatchRequestWithDefaults instantiates a new BannerIdPatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBannerIdPatchRequestWithDefaults() *BannerIdPatchRequest {
	this := BannerIdPatchRequest{}
	return &this
}

// GetTagIds returns the TagIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BannerIdPatchRequest) GetTagIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BannerIdPatchRequest) GetTagIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.TagIds) {
		return nil, false
	}
	return o.TagIds, true
}

// HasTagIds returns a boolean if a field has been set.
func (o *BannerIdPatchRequest) HasTagIds() bool {
	if o != nil && !IsNil(o.TagIds) {
		return true
	}

	return false
}

// SetTagIds gets a reference to the given []int32 and assigns it to the TagIds field.
func (o *BannerIdPatchRequest) SetTagIds(v []int32) {
	o.TagIds = v
}

// GetFeatureId returns the FeatureId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BannerIdPatchRequest) GetFeatureId() int32 {
	if o == nil || IsNil(o.FeatureId.Get()) {
		var ret int32
		return ret
	}
	return *o.FeatureId.Get()
}

// GetFeatureIdOk returns a tuple with the FeatureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BannerIdPatchRequest) GetFeatureIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FeatureId.Get(), o.FeatureId.IsSet()
}

// HasFeatureId returns a boolean if a field has been set.
func (o *BannerIdPatchRequest) HasFeatureId() bool {
	if o != nil && o.FeatureId.IsSet() {
		return true
	}

	return false
}

// SetFeatureId gets a reference to the given NullableInt32 and assigns it to the FeatureId field.
func (o *BannerIdPatchRequest) SetFeatureId(v int32) {
	o.FeatureId.Set(&v)
}
// SetFeatureIdNil sets the value for FeatureId to be an explicit nil
func (o *BannerIdPatchRequest) SetFeatureIdNil() {
	o.FeatureId.Set(nil)
}

// UnsetFeatureId ensures that no value is present for FeatureId, not even an explicit nil
func (o *BannerIdPatchRequest) UnsetFeatureId() {
	o.FeatureId.Unset()
}

// GetContent returns the Content field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BannerIdPatchRequest) GetContent() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BannerIdPatchRequest) GetContentOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Content) {
		return map[string]interface{}{}, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *BannerIdPatchRequest) HasContent() bool {
	if o != nil && !IsNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given map[string]interface{} and assigns it to the Content field.
func (o *BannerIdPatchRequest) SetContent(v map[string]interface{}) {
	o.Content = v
}

// GetIsActive returns the IsActive field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BannerIdPatchRequest) GetIsActive() bool {
	if o == nil || IsNil(o.IsActive.Get()) {
		var ret bool
		return ret
	}
	return *o.IsActive.Get()
}

// GetIsActiveOk returns a tuple with the IsActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BannerIdPatchRequest) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsActive.Get(), o.IsActive.IsSet()
}

// HasIsActive returns a boolean if a field has been set.
func (o *BannerIdPatchRequest) HasIsActive() bool {
	if o != nil && o.IsActive.IsSet() {
		return true
	}

	return false
}

// SetIsActive gets a reference to the given NullableBool and assigns it to the IsActive field.
func (o *BannerIdPatchRequest) SetIsActive(v bool) {
	o.IsActive.Set(&v)
}
// SetIsActiveNil sets the value for IsActive to be an explicit nil
func (o *BannerIdPatchRequest) SetIsActiveNil() {
	o.IsActive.Set(nil)
}

// UnsetIsActive ensures that no value is present for IsActive, not even an explicit nil
func (o *BannerIdPatchRequest) UnsetIsActive() {
	o.IsActive.Unset()
}

func (o BannerIdPatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BannerIdPatchRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TagIds != nil {
		toSerialize["tag_ids"] = o.TagIds
	}
	if o.FeatureId.IsSet() {
		toSerialize["feature_id"] = o.FeatureId.Get()
	}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	if o.IsActive.IsSet() {
		toSerialize["is_active"] = o.IsActive.Get()
	}
	return toSerialize, nil
}

type NullableBannerIdPatchRequest struct {
	value *BannerIdPatchRequest
	isSet bool
}

func (v NullableBannerIdPatchRequest) Get() *BannerIdPatchRequest {
	return v.value
}

func (v *NullableBannerIdPatchRequest) Set(val *BannerIdPatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBannerIdPatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBannerIdPatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBannerIdPatchRequest(val *BannerIdPatchRequest) *NullableBannerIdPatchRequest {
	return &NullableBannerIdPatchRequest{value: val, isSet: true}
}

func (v NullableBannerIdPatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBannerIdPatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



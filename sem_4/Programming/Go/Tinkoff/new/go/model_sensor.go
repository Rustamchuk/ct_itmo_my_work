// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * API умного дома
 *
 * Интерфейс управления и мониторинга устройствами умного дома
 *
 * API version: 0.1
 */

package openapi


import (
	"time"
	"errors"
)



// Sensor - Датчик умного дома
type Sensor struct {

	// Идентификатор
	Id int64 `json:"id"`

	// Серийный номер
	SerialNumber string `json:"serial_number"`

	// Тип
	Type string `json:"type"`

	// Состояние датчика, соответствует значению в payload последнего обработанного события.
	CurrentState int64 `json:"current_state"`

	// Описание
	Description string `json:"description"`

	// Флаг активности датчика
	IsActive bool `json:"is_active"`

	// Дата/время регистрации
	RegisteredAt time.Time `json:"registered_at"`

	// Время последнего события
	LastActivity time.Time `json:"last_activity"`
}

// AssertSensorRequired checks if the required fields are not zero-ed
func AssertSensorRequired(obj Sensor) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"serial_number": obj.SerialNumber,
		"type": obj.Type,
		"current_state": obj.CurrentState,
		"description": obj.Description,
		"is_active": obj.IsActive,
		"registered_at": obj.RegisteredAt,
		"last_activity": obj.LastActivity,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertSensorConstraints checks if the values respects the defined constraints
func AssertSensorConstraints(obj Sensor) error {
	if obj.Id < 1 {
		return &ParsingError{Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}

import numpy as np

P = np.array([
[0.00, 0.00, 0.00, 0.03, 0.00, 0.00, 0.64, 0.19, 0.11, 0.03],
[0.13, 0.09, 0.06, 0.11, 0.09, 0.12, 0.09, 0.08, 0.12, 0.11],
[0.00, 0.00, 0.00, 0.00, 0.08, 0.71, 0.02, 0.01, 0.04, 0.14],
[0.00, 0.13, 0.11, 0.00, 0.62, 0.03, 0.00, 0.03, 0.04, 0.04],
[0.00, 0.00, 0.07, 0.00, 0.00, 0.01, 0.16, 0.71, 0.01, 0.04],
[0.13, 0.08, 0.09, 0.07, 0.07, 0.05, 0.07, 0.15, 0.18, 0.11],
[0.10, 0.09, 0.08, 0.12, 0.08, 0.12, 0.10, 0.14, 0.08, 0.09],
[0.09, 0.11, 0.12, 0.16, 0.07, 0.11, 0.09, 0.12, 0.07, 0.06],
[0.11, 0.10, 0.09, 0.10, 0.13, 0.11, 0.09, 0.08, 0.13, 0.06],
[0.08, 0.11, 0.10, 0.10, 0.15, 0.13, 0.09, 0.07, 0.11, 0.06]])

# A = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]])
#
# print(np.dot(A, np.linalg.matrix_power(P, (204557735))))

# N = np.linalg.inv((np.eye(8)) - P)
# b1 = np.array([[0.1, 0.2, 0.1, 0.1, 0.1, 0.3, 0.1, 0.0]])
# ans = np.dot(b1, N)
# print(ans)
#
# sum = 0
# for i in range(8):
#     sum += ans[0][i]
# print(sum)

A = np.transpose(P) - np.eye(10)
A[9] = np.ones(10)
b = np.zeros(10)
b[9] = 1
pi = np.linalg.solve(A, b)
print(pi)
